name: release
on:
  push:
    tags:
      - '*'
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      PACKAGE_PREFIX: ${{ steps.get-package_prefix.outputs.PACKAGE_PREFIX }}
      TAG_NAME: ${{ steps.get-package_prefix.outputs.TAG_NAME }}
      HEAD_SHA_SHORT: ${{ steps.get-package_prefix.outputs.HEAD_SHA_SHORT }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: get-package_prefix
        id: get-package_prefix
        run: |
          LIB_NAME=bika
          TAG_NAME=$(git describe --abbrev=0 --tags)
          HEAD_SHA_SHORT=$(git rev-parse --short HEAD)
          echo "::set-output name=PACKAGE_PREFIX::${LIB_NAME}_${TAG_NAME}"
          echo "::set-output name=TAG_NAME::${TAG_NAME}"
          echo "::set-output name=HEAD_SHA_SHORT::${HEAD_SHA_SHORT}"

  release:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: create-release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.setup.outputs.TAG_NAME }}
          release_name: ${{ needs.setup.outputs.TAG_NAME }}
          draft: true
          prerelease: true

  ubuntu:
    needs: [release]
    runs-on: ubuntu-latest
    env:
      PACKAGENAME: ${{ needs.setup.outputs.PACKAGE_PREFIX }}_ubuntu_x64
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Waifu2x
      run: |
        wget 'https://github.com/tonquer/waifu2x-ncnn-vulkan-python/releases/download/v1.0.2/waifu2x-ncnn-vulkan-python-v1.0.2-py37-ubuntu-x86_64.zip'
        unzip waifu2x-ncnn-vulkan-python-v1.0.2-py37-ubuntu-x86_64.zip -d waifu2x-ncnn-vulkan-python-v1.0.2-py37-ubuntu-x86_64
        cp waifu2x-ncnn-vulkan-python-v1.0.2-py37-ubuntu-x86_64/waifu2x.so ./
    - name: Build
      run: |
        pyinstaller -F -w start.py --add-binary waifu2x.so:.
        mv dist bika
        cp -r data models resources bika/
        rm bika/resources/*.py -rf
        tar -zcvf ${{ env.PACKAGENAME }}.tar.gz bika/
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}.tar.gz
    - uses: actions/upload-release-asset@v1
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.main.outputs.upload_url }}
        asset_path: ${{ env.PACKAGENAME }}.tar.gz
        asset_name: ${{ env.PACKAGENAME }}.tar.gz
        asset_content_type: application/gzip

  macos:
    needs: [release]
    runs-on: macos-latest
    env:
      PACKAGENAME: ${{ needs.setup.outputs.PACKAGE_PREFIX }}_macos_x64
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        brew install create-dmg
    - name: Waifu2x
      run: |
        wget 'https://github.com/tonquer/waifu2x-ncnn-vulkan-python/releases/download/v1.0.2/waifu2x-ncnn-vulkan-python-v1.0.2-py37-macos-x86_64.zip'
        unzip waifu2x-ncnn-vulkan-python-v1.0.2-py37-macos-x86_64.zip -d waifu2x-ncnn-vulkan-python-v1.0.2-py37-macos-x86_64
        cp waifu2x-ncnn-vulkan-python-v1.0.2-py37-macos-x86_64/waifu2x.so ./
    - name: Build
      run: |
        pyinstaller --clean --log-level TRACE --onedir --name PicACG \
            --add-binary waifu2x.so:. --hidden-import PySide2 --hidden-import requests \
            --hidden-import urllib3 --hidden-import websocket-client --hidden-import pillow \
            --hidden-import conf --hidden-import resources --hidden-import src \
            --hidden-import src.index --hidden-import src.qt --hidden-import src.qt.chat \
            --hidden-import src.qt.com --hidden-import src.qt.download \
            --hidden-import src.qt.main --hidden-import src.qt.menu \
            --hidden-import src.qt.read --hidden-import src.qt.struct --hidden-import src.qt.game\
            --hidden-import src.qt.user --hidden-import src.qt.util --hidden-import src.server \
            --hidden-import src.user --hidden-import src.util --hidden-import ui \
            --hidden-import qss --strip --windowed -i Icon.icns \
            start.py
        rm -rf dist/PicACG
        cp Icon.icns dist/
        ln -s /Applications/   dist/Applications
        cp -avf data models resources dist/PicACG.app/Contents/MacOS
        rm -rf dist/PicACG.app/Contents/MacOS/resources/*.py
        create-dmg --volname "PicACG" --volicon "Icon.icns" --icon "Icon.icns" 200 190 \
            --hide-extension "Icon.icns" ${{ env.PACKAGENAME }}.dmg dist/
        zip -9 bika.zip ${{ env.PACKAGENAME }}.dmg
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PACKAGENAME }}
        path: bika.zip
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.main.outputs.upload_url }}
        asset_path: ${{ env.PACKAGENAME }}.dmg
        asset_name: ${{ env.PACKAGENAME }}.dmg
        asset_content_type: application/gzip

  windows:
    needs: [release]
    runs-on: windows-latest
    env:
      PACKAGENAME: ${{ needs.setup.outputs.PACKAGE_PREFIX }}_windows_x64
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
    - name: Waifu2x
      run: |
        Invoke-WebRequest -Uri 'https://github.com/tonquer/waifu2x-ncnn-vulkan-python/releases/download/v1.0.2/waifu2x-ncnn-vulkan-python-v1.0.2-py37-windows-x64.zip ' -OutFile 'waifu2x-ncnn-vulkan-python-v1.0.2-py37-windows-x64.zip'
        7z x .\waifu2x-ncnn-vulkan-python-v1.0.2-py37-windows-x64.zip "-owaifu2x-ncnn-vulkan-python-v1.0.2-py37-windows-x64"
        cp waifu2x-ncnn-vulkan-python-v1.0.2-py37-windows-x64/waifu2x.pyd .\
    - name: Build
      run: |
        pyinstaller -F -i resources\icon.ico start.py --add-binary "waifu2x.pyd;."
        mv dist/start.exe "dist/start(debug).exe"
        pyinstaller -F -w -i resources\icon.ico start.py --add-binary "waifu2x.pyd;." 
        mv dist bika
        Copy-Item -Verbose -Recurse -Path data -Destination bika/
        Copy-Item -Verbose -Recurse -Path models -Destination bika/
        Copy-Item -Verbose -Recurse -Path resources -Destination bika/
        Remove-Item bika/resources/*.py -r -fo
        cp LICENSE bika\
        cp README.md bika\
        mkdir ${{ env.PACKAGENAME }}
        mv bika ${{ env.PACKAGENAME }}
        7z a -r "$($Env:PACKAGENAME + '.zip')" "bika"
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PACKAGENAME }}
        path: ${{ env.PACKAGENAME }}
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.main.outputs.upload_url }}
        asset_path: ${{ env.PACKAGENAME }}.zip
        asset_name: ${{ env.PACKAGENAME }}.zip
        asset_content_type: application/zip